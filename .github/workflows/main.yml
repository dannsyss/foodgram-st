name: CI/CD Foodgram

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    name: Run backend tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.dev.txt

      - name: Test with ruff
        env:
          IS_TEST: True
        run: |
          cd backend/
          ruff check .
    
      - name: Test with pytest
        env:
          IS_TEST: True
        run: |
          cd backend/
          pytest .
          
  build_backend_and_push_to_docker_hub:
    name: Build and push backend image
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Build and push frontend image
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_nginx_and_push_to_docker_hub:
    name: Build and push nginx image
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push nginx image
        uses: docker/build-push-action@v4
        with:
          context: ./infra/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_nginx:latest
          
  build_migrate_and_push_to_docker_hub:
    name: Build and push migrate image
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push migrate image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_migrate:latest

  build_collectstatic_and_push_to_docker_hub:
    name: Build and push collectstatic image
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push collectstatic image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_collectstatic:latest

  send_message:
    name: Send notification to Telegram
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_nginx_and_push_to_docker_hub
      - build_migrate_and_push_to_docker_hub
      - build_collectstatic_and_push_to_docker_hub
    steps:
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!
            üë®‚Äçüíª –ê–≤—Ç–æ—Ä: ${{ github.actor }}
            üìù Commit message: ${{ github.event.commits[0].message }}
            üîç –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π: https://github.com/${{ github.repository }}/commit/${{github.sha}}
